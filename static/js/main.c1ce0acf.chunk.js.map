{"version":3,"sources":["logo.svg","Navbar.js","Banner.js","Social.js","AboutMe.js","Skills.js","Experience.js","ExperienceList.js","Project.js","ProjectList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","href","Component","Banner","className","src","alt","Social","target","AboutMe","Skills","id","Experience","_this$props","this","props","company","position","duration","img","description","map","desc","index","key","ExperienceList","experience","exp","src_Experience_0","Object","assign","defaultProps","Project","name","source","skills","skill","ProjectList","project","projects","proj","src_Project_0","App","src_Navbar_0","src_Banner_0","src_Social_0","src_AboutMe_0","src_Skills_0","src_ExperienceList_0","src_ProjectList_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1ce0acf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n    render() {\n        return(\n            <header>\n                <nav>\n                    <li><a href=\"#skills\">Skills</a></li>\n                    <li><a href=\"#experience\">Experience</a></li>\n                    <li><a href=\"#projects\">Projects</a></li>\n                    <li><a href=\"#contacts\">Contact</a></li>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport './Banner.css';\n\n\nclass Banner extends Component {\n    render() {\n        return(\n            <div className=\"banner\">\n            <img className=\"banner-pic\" src=\"linkedinpic2.png\" alt=\"linkedinPhoto\"/>\n            <div className=\"typed-text\">\n                <div className=\"typewriter\">Christian Cebrero</div>\n                <div className=\"typewriter\">Software Engineer</div>\n            </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Banner;","import React, {Component} from 'react';\nimport './Social.css';\n\nclass Social extends Component {\n    render() {\n        return(\n\n            <div className=\"social-media-icons\">\n                <div className=\"link-item\">\n                    <a href=\"https://www.linkedin.com/in/ccebrero/\" target=\"_blank\">\n                        <img src=\"linkedin-brands.svg\" alt=\"linkedinpics\"/>\n                    </a>\n                </div>\n                <div className=\"link-item\">\n                    <a href=\"https://github.com/chriscebrero\" target=\"_blank\">\n                        <img src=\"github-square-brands.svg\" alt=\"githubpics\"/>\n                    </a>\n                </div>\n                <div className=\"link-item\">\n                    <a href=\"https://www.linkedin.com/in/ccebrero/\" target=\"_blank\">\n                        <img src=\"copy-solid.svg\" alt=\"copypics\"/>\n                    </a>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Social;","import React, {Component} from 'react';\nimport './AboutMe.css';\n\nclass AboutMe extends Component {\n    render() {\n        return(\n\n            <div className=\"bio\">\n            <h1>\n                About Me\n            </h1>\n            <p>I'm a 4th Year Combined Mathematics & Computer Science Student at UBC, with an interest in full-stack engineering and iOS engineering.</p>\n            <p>When I'm not building apps and/or studying, you can find me playing the piano, playing Nintendo Switch, or editing films.</p>\n            <p>Check out my work experience and projects below.</p>\n            </div>\n        )\n    }\n}\n\nexport default AboutMe","import React, {Component} from 'react';\nimport './Skills.css';\n\nclass Skills extends Component {\n    render() {\n        return(\n            <div id=\"skills\" className=\"skills\">\n            <h1>\n                Skills\n            </h1>\n\n            <div className=\"skill-cards\">\n\n                <div className=\"front-end skill-card\">\n                    <img className=\"frontend-pic\" src=\"laptop-code-solid.svg\" alt=\"frontend\"/>\n                    <h2 className=\"type-of-skill\">Front End</h2>\n                    <div className=\"each-skill\">\n                    <p>HTML5</p>\n\t\t\t\t\t<p>CSS3</p>\n\t\t\t\t\t<p>JavaScript</p>\n                    <p>TypeScript</p>\n\t\t\t\t\t<p>ReactJS</p>\n\t\t\t\t\t<p>AngularJS</p>\n                    </div>\n                </div>\n\n                <div className=\"back-end skill-card\">\n                    <img className=\"backend-pic\" src=\"code-branch-solid.svg\" alt=\"backend\" />\n                    <h2 className=\"type-of-skill\">Back End</h2>\n                    <div className=\"each-skill\">\n                    <p>Java</p>\n\t\t\t\t\t<p>Node.js</p>\n                    <p>Swift</p>\n\t\t\t\t\t<p>Express.js</p>\n\t\t\t\t\t<p>MongoDB</p>\n\t\t\t\t\t<p>C/C++</p>\n\t\t\t\t\t<p>Python</p>\n                    </div>\n                </div>\n\n                <div className=\"tools skill-card\">\n                    <img className=\"tools-pic\" src=\"tools-solid.svg\" alt=\"tools\"/>\n                    <h2 className=\"type-of-skill\">Tools</h2>\n                    <div className=\"each-skill\">\n                    <p>Git</p>\n\t\t\t\t\t<p>Perforce</p>\n\t\t\t\t\t<p>Atom</p>\n\t\t\t\t\t<p>AWS</p>\n\t\t\t\t\t<p>JIRA</p>\n\t\t\t\t\t<p>Jenkins</p>\n\t\t\t\t\t<p>Protractor</p>\n\t\t\t\t\t<p>Jasmine</p>\n                    </div>\n                </div>\n\n            </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Skills;","import React, {Component} from 'react';\nimport './Experience.css';\nimport PropTypes from 'prop-types';\n\nclass Experience extends Component {\n    static propTypes = {\n        company: PropTypes.string.isRequired,\n        position: PropTypes.string.isRequired,\n        duration: PropTypes.string.isRequired,\n        img: PropTypes.string.isRequired,\n        description: PropTypes.arrayOf(PropTypes.string).isRequired\n    }\n    render() {\n        const {company, position, duration, img} = this.props;\n        const description = this.props.description.map((desc, index) => (\n            <li className=\"description\" key={index}>{desc}</li>\n        ));\n        return(\n                    <div className=\"experience-item\">\n                    <div className=\"exp-content\">\n                        <div className=\"left\">\n                            <h3 className=\"company-name\">{company}</h3>\n                            <h4 className=\"job-position\">{position}</h4>\n                            <h4 className=\"duration\">{duration}</h4>\n                            <ul>\n                                {description}\n                            </ul>\n                        </div>\n                    </div>\n                        <div className=\"right\">\n                        <img className=\"compimg\" src={img} alt={company}/>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nexport default Experience;","import React, {Component} from 'react';\nimport Experience from './Experience';\nimport './ExperienceList.css';\nimport PropTypes from 'prop-types';\n\nclass ExperienceList extends Component {\n    static defaultProps = {\n        experience: [\n            {\n                company: \"SAP\",\n                position: \"Software Developer Intern\",\n                duration: \"October 2018 to August 2019\",\n                img: \"sap-logo.png\",\n                description: [\"Implemented key features that increased the efficiency of SAP's new Help Portal\", \"Polished SAP's Hybris-themed websites by running and fixing code on different platforms and browsers\", \"Achieved many stakeholder objectives by establishing a more customized version of the SAP DITA Open Toolkit\", \"Ensured stability and reliability of SAP's User Assistance Content Platform by writing JavaScript scripts to automate UI tests\"]\n            }, \n            {\n                company: \"Mount Pleasant Business Improvement Area\",\n                position: \"Marketing Coordinator Intern\",\n                duration: \"January 2017 to April 2017\",\n                img: \"mountpleasantbia.png\",\n                description: [\"Inputted new information regarding new property listings onto a spreadsheet which was later used to showcase statistics\", \"Surveyed business owners to create beneficial solutions to their dilemmas regarding the area\", \"Drafted solutions to improve businesses & Mount Pleasant as a community\"]\n            }\n        ]\n    }\n\n    static propTypes = {\n        experience: PropTypes.arrayOf(PropTypes.object)\n    }\n    render() {\n        const experience = this.props.experience.map((exp, index) => (\n            <Experience key={index} {...exp}/>\n        ))\n\n        return(\n            <div id=\"experience\" className=\"experience\">\n                <h1>Experience</h1>\n            <div className=\"experience-list\">\n            {experience}\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default ExperienceList","import React, {Component} from 'react';\nimport './Project.css';\nimport PropTypes from 'prop-types';\n\nclass Project extends Component {\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        skills: PropTypes.arrayOf(PropTypes.string).isRequired,\n        img: PropTypes.string.isRequired,\n        source: PropTypes.string.isRequired\n    }\n    render() {\n        const {name, description, img, source} = this.props;\n        const skills = this.props.skills.map((skill, index) => (\n            <p className=\"skills\" key={index}>{skill}</p>\n        ));\n        return(\n                    <div className=\"project-item\">\n                    <div className=\"project-content\">\n                        <div className=\"left\">\n                            <h3 className=\"name\">{name}</h3>\n                            <h4 className=\"description\">{description}</h4>\n                            <div>\n                                {skills}\n                            </div>\n                            <a className=\"demo\" href={source}>\n                                Source\n                            </a>\n                        </div>\n                    </div>\n                        <div className=\"right\">\n                        <img className=\"image\" src={img} alt={name}/>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nexport default Project","import React, {Component} from 'react';\nimport Project from './Project';\nimport './ProjectList.css';\nimport PropTypes from 'prop-types';\n\nclass ProjectList extends Component {\n    static defaultProps = {\n        projects: [\n            {\n                name: \"Warbler\",\n                description: \"A message board application that is catered towards groups of friends that want to leave messages, organize events, upload pictures, and more.\",\n                skills: [\"HTML5\", \"CSS3\", \"React\", \"Redux\", \"MongoDB\", \"JWT Web Token\", \"REST API\"],\n                img: \"WARBLER.png\",\n                source: \"https://github.com/chriscebrero/WarblerApp\"\n            }, \n            {\n                name: \"Yelp Camp\",\n                description: \"An application that operates the same as Yelp in which users can upload, set the cost, review, rate and comment on campgrounds.\",\n                skills: [\"HTML5\", \"CSS3\", \"JavaScript\", \"Node.js\", \"MongoDB\", \"Express.js\"],\n                img: \"YELPCAMP.png\",\n                source: \"https://github.com/chriscebrero/YelpCamp\"\n            },\n            {\n                name: \"Guess The Colour?\",\n                description: \"A simple game application in which a user has to guess the right colour amongst six shapes based on a given RGB code\",\n                skills: [\"HTML5\", \"CSS3\", \"JavaScript\"],\n                img: \"GuessTheColour.png\",\n                source: \"https://github.com/chriscebrero/Web-Dev/tree/master/Colour%20Project\"\n            },\n            {\n                name: \"Cook It!\",\n                description: \"A utility application built towards uploading new recipes onto a display so the user will be able to choose what to eat and how to prepare in the future\",\n                skills: [\"HTML5\", \"CSS3\", \"React\", \"Node.js\"],\n                img: \"cookit.png\",\n                source: \"https://github.com/chriscebrero/Web-Dev/tree/master/Colour%20Project\"\n            }\n            ]\n    }\n\n    static propTypes = {\n        projects: PropTypes.arrayOf(PropTypes.object)\n    }\n    render() {\n        const project = this.props.projects.map((proj, index) => (\n            <Project key={index} {...proj}/>\n        ))\n\n        return(\n            <div id=\"projects\" className=\"project\">\n                <h1>Projects</h1>\n            <div className=\"project-list\">\n            {project}\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default ProjectList","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./Navbar\";\nimport Banner from \"./Banner\";\nimport Social from \"./Social\";\nimport AboutMe from \"./AboutMe\";\nimport Skills from \"./Skills\";\nimport ExperienceList from './ExperienceList';\nimport ProjectList from './ProjectList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Navbar />\n    <div className=\"app-container\">\n      <Banner />\n      <Social />\n      <AboutMe />\n      <Skills />\n      <ExperienceList />\n      <ProjectList />\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WebsiteApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<WebsiteApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}